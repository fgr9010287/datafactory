<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc.xsd"
       default-lazy-init="false">


    <context:component-scan base-package="com.gpdi" />

    <!-- 启用CGliB -->
    <aop:aspectj-autoproxy proxy-target-class="true"/>

    <!-- 配置结果页面 前缀和后缀 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/" />
        <property name="suffix" value=".jsp" />
    </bean>

    <context:property-placeholder
            ignore-unresolvable="true" location="classpath*:/config.properties"/>

    <bean init-method = "init" class = "com.gpdi.common.recource.ResVersionExposer" />
    <!-- 过滤掉静态资源的拦截 设置缓存为一年最大限度利用缓存,order参数是Spring配置的优先级，数字越小越优先 -->
    <mvc:resources mapping="/static/${res.version}/**" location="/WEB-INF/resources/" cache-period="31556926" order="0">
        <mvc:resource-chain resource-cache="true">
            <mvc:resolvers>
                <!-- 如果需要Gzip压缩，进行Gzip压缩，提升加载速度 -->
                <bean class="org.springframework.web.servlet.resource.GzipResourceResolver"/>
            </mvc:resolvers>
        </mvc:resource-chain>
    </mvc:resources>

    <mvc:annotation-driven
            content-negotiation-manager="contentNegotiationManager">
        <mvc:message-converters register-defaults="true">
            <!-- 将StringHttpMessageConverter的默认编码设为UTF-8 -->
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <constructor-arg value="UTF-8" />
            </bean>
            <!-- 将Jackson2HttpMessageConverter的默认格式化输出设为true -->
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="prettyPrint" value="true" />
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!-- REST中根据URL后缀自动判定Content-Type及相应的View -->
    <bean id="contentNegotiationManager"
          class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
        <property name="mediaTypes">
            <value>
                json=application/json
                xml=application/xml
            </value>
        </property>
    </bean>

    <mvc:annotation-driven>
        <!-- 处理responseBody 里面日期类型 -->
        <mvc:message-converters>
            <bean
                    class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="objectMapper">
                    <bean class="com.fasterxml.jackson.databind.ObjectMapper">
                        <property name="dateFormat">
                            <bean class="java.text.SimpleDateFormat">
                                <constructor-arg type="java.lang.String" value="yyyy-MM-dd HH:mm:ss" />
                            </bean>
                        </property>
                    </bean>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!-- 将Controller抛出的异常转到特定View, 保持SiteMesh的装饰效果 -->
    <!-- 该异常是SpringMVC在检查上传的文件信息时抛出来的，而且此时还没有进入到Controller方法中 -->
    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
                <!-- 处理其它异常(包括Controller抛出的) -->
                <prop key="java.lang.Throwable">error</prop>
            </props>
        </property>
    </bean>

</beans>
